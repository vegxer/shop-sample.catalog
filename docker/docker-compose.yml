version: '3.5'
services:
  catalog-nginx:
    image: maximkrupin/shop-sample-nginx:1.23.1
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template
    depends_on:
      - catalog
    ports:
      - ${PORT}:80
    networks:
      - catalog-lan
    env_file: .env
  catalog:
    image: maximkrupin/shop-sample-catalog:${CATALOG_VERSION}
    container_name: shop-sample-catalog
    networks:
      - catalog-lan
    depends_on:
      - catalog_postgres
    restart: always
    env_file: .env
    environment:
      server.port: 8080
      spring.jpa.show-sql: false
      spring.jpa.generate-ddl: false
      spring.jpa.hibernate.ddl-auto: none
      spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation: true
      spring.datasource.url: jdbc:postgresql://catalog_postgres:5432/${PG_DB}
      spring.datasource.username: ${PG_USER}
      spring.datasource.password: ${PG_PASSWORD}
      spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
      spring.flyway.baseline-on-migrate: true
      springdoc.packagesToScan: ru.vegxer.shopsample.catalog
      server.forward-headers-strategy: framework
      app.attachment.location: ${APP_ATTACHMENT_LOCATION}
      app.attachment.thumnail.size: ${APP_ATTACHMENT_THUMBNAIL_SIZE}
      TZ: "Europe/Moscow"
    volumes:
      - attachments:${APP_ATTACHMENT_LOCATION}
      - ${APP_JWT_KEY_PUBLIC_HOST_PATH}:${APP_JWT_KEY_PUBLIC_PATH}
  catalog_postgres:
    image: postgres:13
    container_name: shop-sample-postgres
    networks:
      - catalog-lan
    ports:
      - "5433:5432"
    volumes:
      - catalog-shop-pgdata:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
      POSTGRES_HOST: catalog_postgres
      POSTGRES_PORT: 5432
networks:
  catalog-lan:
    name: shop-sample-lan
    external: true
    driver: bridge
volumes:
  catalog-shop-pgdata:
    driver: local
  attachments:
    driver: local
